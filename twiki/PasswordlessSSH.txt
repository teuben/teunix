%META:TOPICINFO{author="teuben" date="1717727236" format="1.1" reprev="1.12" version="1.12"}%
%META:TOPICPARENT{name="Trash.AstroUMDHowTos"}%
---+ Passwordless SSH

Suppose you *ssh* to a department machine using your laptop (Linux or !MacOS). Normally you are asked for a password. If you're tired of typing it all the time (but still want the security!), follow this procedure:
   1 On your laptop (or any machine from which you wish to login to a remote machine without a password), type "ssh-keygen -t rsa" (without the quotes). Choose the defaults and use an empty passphrase (optionally, provide a strong passphrase, but you'll need to remember it—see the note about passphrases below).
   1 Now do the following (again, without the quotes): "scp ~/.ssh/id_rsa.pub user@remotehost:.ssh/authorized_keys", where "remotehost" is the full domain name of the machine you want to login to (e.g., earth.astro.umd.edu) and "user" is your username on that machine. You will be prompted for your password, but if all goes well that will be the last time!
You should now be able to login to the remote machine without typing your password. Try it: "ssh -Y user@remotehost".

NOTE: The above procedure *overwrites* any existing authorized_keys file on the remote machine. If you're setting up passwordless ssh for multiple machines, append each new id_rsa.pub to authorized_keys, rather than overwrite it.

A more modern approach is to use the newer <strong>ssh-copy-id </strong>program. This is a three step procedure, after the private and public key has been set up using *ssh-keygen*:
   1 ssh-keygen
   1 ssh-copy-id user@remotehost
   1 ssh user@remotehost
Although ssh access is fine for quick jobs, a more persistent approach would be to a full desktop using VNC techniques as described in VNCScreenSharingConnection
---++ A note on passphrases

Providing *ssh-keygen* with a passphrase encrypts your private key, but you need to provide your passphrase every time you use that key, which defeats the purpose of a passwordless login. On Linux, you can use *ssh-agent* so you only have to type in your passphrase once each session: type "ssh-agent $SHELL; ssh-add"—all sessions started from that shell from then on will not prompt for the passphrase. On !MacOS, when you first use your passphrase, you will be prompted if you want to add it to your keychain; doing so means you don't have to type it again! For more information, and to learn how to change your passphrase (hint: it's just "ssh-keygen -p"), see <a href="https://help.github.com/articles/working-with-ssh-key-passphrases/" target="_blank" title="Working with passphrases">this article</a>.

-- Main.DerekRichardson - 2011-03-02
